What happens when you initialize a repository? Why do you need to do it?

   The .git metadata subdirectory is created.
   It holds logs and stuff to keep track of the changes to the repository.


How is the staging area different from the working directory and the
repository? What value do you think it offers?

   The staging area indicates which things in the working directory are to
   be committed next.  It allows you to hold back some changed files for
   later, separate commit, by not adding them, yet, to the staging area.


How can you use the staging area to make sure you have one commit per
logical change?

   "git add" only those files that contain changes relevant to one particular
   logical change and "git commit" those changes.  Other files with unrelated
   changes will just be ignored.  Repeat as necessary.


What are some situations when branches would be helpful in keeping your
history organized? How would branches help?

   Branches help when different experimental changes would involve taking
   the code in different directions.  The history of multiple changes
   while following those directions can thereby be kept separate.


How do the diagrams help you visualize the branch structure?

   They show which commits are the ones present in only certain subbranches and,
   hence, which changes are only available in those branches.


What is the result of merging two branches together? Why do we represent
it in the diagram the way we do?

   The changes made in the files of both branches are merged to give a
   single set of files with all of those changes combined.
   The diagram shows the resulting commit point as having 2 parents to
   make it clear where the resulting file contents came from.


What are the pros and cons of Git's automatic merging vs.  always doingmerges manually?
   Automatic merges save the user a lot of work that's pretty obvious, anyway.
   However, it's possible for an automatic merge to introduce a bug.
   They try to only do really obvious merges automatically, to minimize the
   changes of bad merges.
